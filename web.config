<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <appSettings>
    <add key="logonPage" value="/Secure/Logon.aspx"/>
  </appSettings>
  <connectionStrings>
    <add name="LocalDB" connectionString="Server=TABLET;Database=thevilla_scorebook;Uid=vcc;Password=vcc;Provider='SQLOLEDB';"  />
    <add name="Laptop" connectionString="Server=LAPTOP\SQLEXPRESS;Database=thevilla_scorebook;Uid=vcc;Password=vcc;Provider='SQLOLEDB';"  />
    <add name="BigPC" connectionString="Server=BIG-PC\SQLEXPRESS;Database=thevilla_scorebook;Uid=vcc;Password=vcc;Provider='SQLOLEDB';"  />
    <add name="ProdDB" connectionString="Server=mssql.aspnethosting.co.uk,14330;Database=thevilla_scorebook;Uid=thevilla_admin;Password=Norabatty1;Provider='SQLOLEDB';"  />
  </connectionStrings>
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <!--<authentication mode="Windows"/>-->
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.
-->
    <customErrors mode="Off"/>
    <httpRuntime requestValidationMode="2.0" />
    <httpModules>
      <add name="UploadHttpModule" type="Brettle.Web.NeatUpload.UploadHttpModule, Brettle.Web.NeatUpload"/>
    </httpModules>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
</configuration>